{"mappings":"AAWA,KAAK,CAAC,QAAQ,GAAG,CAAC;IACjB,MAAM,GAAG,YAA0C,EAAE,SAAsB,GAAK,CAAC;QAChF,EAAwF,AAAxF,sFAAwF;QACxF,EAAE,EAAE,MAAM,CAAC,YAAY,KAAK,CAAQ,WAAI,MAAM,CAAC,YAAY,KAAK,CAAQ,SAAE,CAAC;YAC1E,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,YAAY;YACjE,MAAM;QACP,CAAC;QACD,KAAK,CAAC,UAAU,GAAgB,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG;QACvE,EAA6B,AAA7B,2BAA6B;QAC7B,EAAE,EAAE,YAAY,CAAC,KAAK,EACrB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAC5B,MAAM,EAAE,CAAC,GAAK,CAAC,KAAK,CAAU;UAC9B,OAAO,EAAE,CAAC,GAAM,UAAU,CAAC,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;;QAEvD,EAAiD,AAAjD,+CAAiD;QACjD,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,QAAQ,EAC9B,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,GAAK,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU;;QAEjF,SAAS,CAAC,WAAW,CAAC,UAAU;IACjC,CAAC;AACF,CAAC;AACD,KAAK,CAAC,KAAK,GAAG,CAAC;IACd,aAAa,GAAG,GAAG,EAAE,KAAK,KAAK,QAAQ,GAAK,CAAC;QAC5C,EAAE,EAAE,MAAM,CAAC,GAAG,KAAK,CAAU,WAAE,CAAC;YAC/B,KAAK,CAAC,SAAS,GAAc,GAAG,CAAC,KAAK;YACtC,MAAM,CAAC,SAAS;QACjB,CAAC;QACD,KAAK,CAAC,OAAO,GAAe,CAAC;YAAC,GAAG;YAAE,KAAK,EAAE,CAAC;mBAAI,KAAK;gBAAE,QAAQ;YAAC,CAAC;QAAC,CAAC;QAClE,OAAO,CAAC,GAAG,CAAC,CAAM,OAAE,OAAO;QAC3B,MAAM,CAAC,OAAO;IACf,CAAC;AACF,CAAC;AAED,KAAK,CAAC,GAAG,yCACP,CAAG;QAAC,SAAS,EAAC,CAAc;;;;;;yCAC3B,CAAE;;;;;;OAAC,CAAa,mDAChB,CAAC;;;;;;OAAC,CAA2B,iEAC7B,CAAK;QAAC,IAAI,EAAC,CAAM;QAAC,WAAW,EAAC,CAAM;;;;;;;;AAIvC,QAAQ,CAAC,MAAM,mCAAE,GAAG;;;;;;IAAK,QAAQ,CAAC,cAAc,CAAC,CAAM","sources":["react.tsx"],"sourcesContent":["interface Component {\n\t(props: Props): JsxElement;\n}\ninterface JsxElement {\n\ttag: keyof HTMLElementTagNameMap;\n\tprops: Props;\n}\ntype Props = {\n\tchildren?: JsxElement[];\n} & Record<string, any>;\n\nconst ReactDom = {\n\trender: (reactElement: JsxElement | string | number, container: HTMLElement) => {\n\t\t// Check if reactElement is string or number (leaf element with simple text as children)\n\t\tif (typeof reactElement === 'number' || typeof reactElement === 'string') {\n\t\t\tcontainer.appendChild(document.createTextNode(String(reactElement)));\n\t\t\treturn;\n\t\t}\n\t\tconst domElement: HTMLElement = document.createElement(reactElement.tag);\n\t\t// fulfill element with props\n\t\tif (reactElement.props) {\n\t\t\tObject.keys(reactElement.props)\n\t\t\t\t.filter((p) => p !== 'children')\n\t\t\t\t.forEach((p) => (domElement[p] = reactElement.props[p]));\n\t\t}\n\t\t// recursivly render each child element in parent\n\t\tif (reactElement.props.children) {\n\t\t\treactElement.props.children.forEach((child) => ReactDom.render(child, domElement));\n\t\t}\n\t\tcontainer.appendChild(domElement);\n\t},\n};\nconst React = {\n\tcreateElement: (tag, props, ...children) => {\n\t\tif (typeof tag === 'function') {\n\t\t\tconst component: Component = tag(props);\n\t\t\treturn component;\n\t\t}\n\t\tconst element: JsxElement = { tag, props: { ...props, children } };\n\t\tconsole.log('ELEM', element);\n\t\treturn element;\n\t},\n};\n\nconst App = () => (\n\t<div className='react-hehehe'>\n\t\t<h1>Hello, world!</h1>\n\t\t<p>Lorem ipsum dolor sit amet.</p>\n\t\t<input type='text' placeholder='name' />\n\t</div>\n);\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"names":[],"version":3,"file":"index.35e9f482.js.map","sourceRoot":"/__parcel_source_root/"}